group = 'org.interledger'
description = 'Crypto Conditions'
version = '2.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8


/* 
 custom checkstyle properties for the build.
 see https://docs.gradle.org/current/dsl/org.gradle.api.plugins.quality.CheckstyleExtension.html
*/
checkstyle {
    configFile file('google_checks.xml')
    toolVersion '7.1'
    showViolations = true
    /* 
       by default, checkstyle warnings dont fail the build. but we want exactly that for circle-ci 
       pass/fail reporting, so tell the plugin to break the build on the first error 
    */
	maxWarnings = 0 
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': description,
                   'Implementation-Version': version
    }
}

repositories {    
    maven { url "http://repo.maven.apache.org/maven2" }
    mavenLocal()
}

dependencies {
    compile 'net.i2p.crypto:eddsa:0.1.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.bouncycastle:bcprov-jdk16:1.46'
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.7.0'
}


task syncTestVectors(type: Sync) {
    from 'test-data/test-vectors'
    into 'src/test/resources/org/interledger/cryptoconditions/test/vectors'
}
tasks.processTestResources.dependsOn(syncTestVectors)

tasks.withType(Checkstyle) {
    // Dont bother checking the test Application or HexDump classes, they will probably be removed.
    exclude 'org/interledger/cryptoconditions/Application*'
    exclude 'org/interledger/cryptoconditions/HexDump*'
}

//Maven pom compatibility task:
task writePom {
    doLast {
        pom {
            project {
                inceptionYear '2016'            
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                properties {
                    "project.build.sourceEncoding" "UTF-8"
                    "maven.compiler.source" "1.8"
                    "maven.compiler.target" "1.8"
                    "checkstyle.config.location" "google_checks.xml"                
                    "checkstyle.consoleOutput" "true"
                }
                reporting  {
                    plugins {
                        plugin {
                            groupId "org.apache.maven.plugins"
                            artifactId "maven-checkstyle-plugin"
                            version "2.17"
                        }
                    }
                    plugins {
                        plugin {
                            groupId "org.apache.maven.plugins"
                            artifactId "maven-javadoc-plugin"
                            version "2.10.4"                        
                        }
                    }
                }
            }
        }.writeTo("pom.xml")
    }
}
